@use 'sass:color';
@use '../config' as *;
@use '../function' as *;

@mixin generate-badge {
  .bdg {
    @extend %component-properties;

    display: inline-flex;
    align-items: center;
    align-self: flex-start;
    justify-content: center;
    min-width: 2.75em;
    height: 2.25em;
    margin: 0;
    padding: 0.25em 0.625em;
    border-style: config($border, 'style');
    border-radius: config($border, 'radius');
    font-size: calc(var(--_scale, 1) * config($type-sizes, 'font-size-min'));
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    white-space: nowrap;

    > :where(svg, .spinner):not(:only-child) {
      display: inherit;
    }

    > :where(svg, .spinner):first-child:not(:only-child) {
      margin-right: 8px;
      margin-left: -4px;
    }

    > :where(svg, .spinner):last-child:not(:only-child) {
      margin-right: -4px;
      margin-left: 8px;
    }

    &-fw {
      width: 100%;
      font-weight: 600;
    }

    &-icon {
      width: 2.75em;
      min-width: unset;
      padding: 0.325em;
    }

    &-disabled {
      opacity: 0.6;
      cursor: default;
      pointer-events: none;
    }

    &:empty {
      display: none;
    }

    /* &:not([class*='bg-']) {
      border-color: color('border');
      background: color('surface');

      @media (prefers-color-scheme: 'light') {
        color: color-contrast(map-deep-get($colors, 'light', 'surface'));
      }

      @media (prefers-color-scheme: 'dark') {
        color: color-contrast(map-deep-get($colors, 'dark', 'surface'));
      }
    } */

    &--tag {
      position: relative;
    }

    &__link {
      position: absolute;
      z-index: 200;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}
